invoice
	- shipment (shipment that triggered invoice or first shipment of the sale).
	- invoiceItems
		- saleItem

ShipmentShipped Trigger:
	Shimpent shipment;
	for(ShipItem shipItem: shipment.shipmentItems)
		Customer customer = shipment.customer;
		if(customer.invoiceType == 'Full Sale')
			List sales = repo.getSalesForShipmentNoInvoice(shipment.id);
			for(Sale sale: sales)
				Invoice i = new Invoice();
				i.shipment = shipment;
				for(SaleItems saleItem: sale.saleItems)
					InvoiceItem ii = new InvoiceItem():
					ii.saleItem = saleItem;
					ii.unitPrice = saleItem.unitPrice;
					ii.unitsInvoiced = saleItem.units;
					i.add(ii);
				saveInvoice(invoice);
						
		if(customer.invoiceType == 'Sale per Shipment')
			Invoice i = new Invoice();
			i.shipment = shipment;
			for(ShipmentItem shipItem: shipment.shipmentItems)
				InvoiceItem ii = new InvoiceItem():
				ii.saleItem = shipItem.saleItem;
				ii.unitPrice = shipItem.unitPrice;
				ii.unitsInvoiced = shipItem.units;
				i.add(ii);
			saveInvoice(invoice);
		
		if(customer.invoiceType ==  'Item per Shipment')
			Map<Long, List<ShipmentItem>> map;
			for(ShipmentItem shipItem: shipmetn.shipmentItems)
				List<ShipmentItem> list = map.get(shipItem.saleItem.sale.id))
				if(list==null)
					list = new ArrayList<ShipmentItem>();
					map.put(shipItem.saleItem.sale.id, list);
				list.add(shipItem);
			for(Long saleId, List<ShipmentItem> shipItems: map)
				Invoice i = new Invoice();
				i.shipment = shipment;
				for(ShipmentItem shipItem: shipItems)
					InvoiceItem ii = new InvoiceItem();
					ii.saleItem = shipItem.saleItem;
					ii.unitPrice = shipItem.unitPrice;
					ii.unitsInvoiced = shipItem.units;
					i.add(ii);
				saveInvoice(invoice);


-------------------------------------------------
Backlog functionality:
Production:
- Show box with large percentage (On target/slow (based on hours scheduled and units), %Performance/Efficiency, %Production done).
Shipment:
- Persist filter search or show shipment in popup.
Global:
- Keep search options persisted (until page refreshed or logged out).

Backlog tech-dead:
Component entity:
	persist unitsInOrder
	change all int to Long
Item entity:
	remove eager loding
	chage all int to Long
	persist unitsOnStack
Purchase entity:
	persist isReceived
PurchaseComponent entity
	change units to unitsPurchased
	persist unitsReceived	
Receiving entity
	change units to unitsReceived	
SaleItem enitty
	change all int to Long
	change units to unitsSold
Shipment entity
	change totalUnits to unitsShipped
	add to updateUnits methods instead of doing on client.
ShipmentItem entity
	change units to unitsShipped;

